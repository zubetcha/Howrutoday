{"ast":null,"code":"var _jsxFileName = \"/Users/zuhye/Library/Mobile Documents/com~apple~CloudDocs/\\u1112\\u1161\\u11BC\\u1112\\u116299/3W React basic/homework/src/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = props => {\n  _s();\n\n  const history = useHistory();\n  const daydays = props.dayday;\n  const [count, setCount] = React.useState(5);\n  const circle_count = Array.from({\n    length: count\n  }, (el, i) => i);\n  console.log(circle_count);\n  console.log(props.match); // 만약 daydays 의 요소의 앞 세 글자의 대문자와 === url 파라미터라면\n  // retrun How was your {dayday}\n  // (daydays[i].substring(0, 3).toUppercase() == props.match.params.day)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [daydays.map((dayday, i) => {\n      console.log(dayday);\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"How was your \", dayday]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this);\n    }), \";\", /*#__PURE__*/_jsxDEV(Circlewrap, {\n      children: circle_count.map((num, index) => {\n        return /*#__PURE__*/_jsxDEV(Nonclick, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Complete, {\n      onClick: () => {\n        history.push(\"/\");\n      },\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Detail, \"xyNuS5F0R7fFPEKJUxiFottEkJw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Detail;\nconst Circlewrap = styled.div`\n    width: 300px;\n    display: flex;\n    margin: auto;\n`;\n_c2 = Circlewrap;\nconst Nonclick = styled.div`\n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin: 22px 10px;\n    border: 5px solid lightgrey;\n    border-radius: 50%;\n    background-color: white;\n`;\n_c3 = Nonclick;\nconst Complete = styled.button`\n    outline: 0;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    background-color: seagreen;\n    color: whitesmoke;\n\n    width: 120px;\n    height: 40px;\n    margin: 20px auto;\n\n    font-size: 14px;\n    cursor: pointer;\n`; // url 파라미터를 dayday의 요소로 가져와서\n// if url 파라미터와 dayday[i]가 일치하면 dayday[i] 출력\n\n_c4 = Complete;\nexport default Detail;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"Circlewrap\");\n$RefreshReg$(_c3, \"Nonclick\");\n$RefreshReg$(_c4, \"Complete\");","map":{"version":3,"sources":["/Users/zuhye/Library/Mobile Documents/com~apple~CloudDocs/항해99/3W React basic/homework/src/Detail.js"],"names":["React","useHistory","useParams","styled","Detail","props","history","daydays","dayday","count","setCount","useState","circle_count","Array","from","length","el","i","console","log","match","map","num","index","push","Circlewrap","div","Nonclick","Complete","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,OAAO,GAAGF,KAAK,CAACG,MAAtB;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,CAAf,CAA1B;AACA,QAAMC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEN;AAAV,GAAX,EAA8B,CAACO,EAAD,EAAKC,CAAL,KAAWA,CAAzC,CAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,KAAlB,EAVsB,CAYtB;AACA;AACA;;AAEA,sBACI;AAAA,eAESb,OAAO,CAACc,GAAR,CAAY,CAACb,MAAD,EAASS,CAAT,KAAe;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,0BACI;AAAA,oCACkBA,MADlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAPA,CAFT,oBAUI,QAAC,UAAD;AAAA,gBACKI,YAAY,CAACS,GAAb,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,4BACI,QAAC,QAAD,MAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAIH,OALA;AADL;AAAA;AAAA;AAAA;AAAA,YAVJ,eAkBI,QAAC,QAAD;AACI,MAAA,OAAO,EAAE,MAAM;AAAEjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AAAmB,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA1CD;;GAAMpB,M;UAEcH,U;;;KAFdG,M;AA6CN,MAAMqB,UAAU,GAAGtB,MAAM,CAACuB,GAAI;AAC9B;AACA;AACA;AACA,CAJA;MAAMD,U;AAMN,MAAME,QAAQ,GAAGxB,MAAM,CAACuB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,Q;AAUN,MAAMC,QAAQ,GAAGzB,MAAM,CAAC0B,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA,C,CAeA;AACA;;MAhBMD,Q;AAmBN,eAAexB,MAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Detail = (props) => {\n\n    const history = useHistory();\n    const daydays = props.dayday;\n\n\n    const [count, setCount] = React.useState(5);\n    const circle_count = Array.from({ length: count }, (el, i) => i);\n    console.log(circle_count);\n\n    console.log(props.match);\n\n    // 만약 daydays 의 요소의 앞 세 글자의 대문자와 === url 파라미터라면\n    // retrun How was your {dayday}\n    // (daydays[i].substring(0, 3).toUppercase() == props.match.params.day)\n\n    return (\n        <div>\n\n                {daydays.map((dayday, i) => {\n                    console.log(dayday);\n                    return (\n                        <h2>\n                            How was your {dayday}\n                        </h2>\n                    )\n                })};\n            <Circlewrap>\n                {circle_count.map((num, index) => {\n                    return (\n                        <Nonclick key={index}>\n                        </Nonclick>\n                    )\n                })}\n            </Circlewrap>\n            <Complete\n                onClick={() => { history.push(\"/\") }}>\n                Complete\n            </Complete>\n\n        </div >\n    )\n};\n\n\nconst Circlewrap = styled.div`\n    width: 300px;\n    display: flex;\n    margin: auto;\n`;\n\nconst Nonclick = styled.div`\n    display: flex;\n    width: 30px;\n    height: 30px;\n    margin: 22px 10px;\n    border: 5px solid lightgrey;\n    border-radius: 50%;\n    background-color: white;\n`;\n\nconst Complete = styled.button`\n    outline: 0;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    background-color: seagreen;\n    color: whitesmoke;\n\n    width: 120px;\n    height: 40px;\n    margin: 20px auto;\n\n    font-size: 14px;\n    cursor: pointer;\n`;\n\n// url 파라미터를 dayday의 요소로 가져와서\n// if url 파라미터와 dayday[i]가 일치하면 dayday[i] 출력\n\n\nexport default Detail;"]},"metadata":{},"sourceType":"module"}