{"version":3,"sources":["Circle.js","Myweek.js","NotFound.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Circlewrap","styled","div","Click","Circle","props","React","useState","count","circle_count","Array","from","length","el","i","console","log","random","Math","floor","map","num","index","style","borderColor","Highlight","span","Title","h2","Row","Day","Detail","Myweek","useHistory","daydays","dayday","day","to","Goback","button","NotFound","history","onClick","push","Parameter","Complete","parameter","match","params","clicked","setClicked","handleStarClick","e","preventDefault","clickStates","Container","Wrap","App","className","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.676b15ff.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Circle = (props) => {\n\n    const [count, setCount] = React.useState(5);\n    const circle_count = Array.from({ length: count }, (el, i) => i);\n    console.log(circle_count); \n\n\n    let random = Math.floor(Math.random() * 5)\n    let sum = 0;\n\n    return (\n        <Circlewrap>\n            {circle_count.map((num, index) => {\n                if (index <= random) {\n                    sum += 1;\n                    return (\n                        <div>\n                            <Click key={index}></Click>\n                        </div>   \n                    )\n                } else {\n                    return (\n                        <div>\n                            <Click key={index} style={{borderColor:\"whitesmoke\"}}></Click>\n                        </div> \n                    )\n                }\n            })}\n        </Circlewrap>\n    )\n}\n\n// 0~4까지 랜덤 정수 Math.floor(Math.random()*5)\n// if \n\nconst Circlewrap = styled.div`\n    width: 230px;\n    display: flex;\n    margin: 0 10px;\n`;\n\nconst Click = styled.div`\n    display: flex;\n    width: 20px;\n    height: 20px;\n    margin: 17.5px 8px;\n    border: 5px solid seagreen;\n    border-radius: 50%;\n    background-color: white;\n`;\n\nexport default Circle;","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Circle from './Circle';\n\n\nconst Myweek = (props) => {\n\n    const history = useHistory();\n    const daydays = props.dayday;\n    console.log(daydays);\n\n    return (\n        <div>\n            <Title>How are you  <Highlight>Today</Highlight>?</Title>\n\n            {daydays.map((day, index) => {\n                console.log(day);\n                return (\n                    <Row key={index}>\n                        <Day>{day}</Day>\n                        <Circle />\n                        <Link to={`/detail/${day}`}>\n                            <Detail >\n                            </Detail>\n                        </Link>\n                    </Row>\n                );\n            })}\n        </div>\n    );\n};\n\nconst Highlight = styled.span`\n    background-image: linear-gradient(transparent 60%, #F8CD07 40%);\n`;\n\nconst Title = styled.h2`\n    font-family: 'Pretendard-Bold';\n    font-size: 24px;\n    color: #464646;\n    margin: 30px auto;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: left;\n    align-items; center;\n`;\n\nconst Day = styled.div`\n    width: 75px;\n\n    font-family: 'Pretendard-Regular';\n    font-size: 12px;\n    color: #464646;\n    vertical-align: middle;\n    line-height: 65px;\n    text-align: right;\n`;\n\nconst Detail = styled.div`\n    width: 12px;\n    height: 12px;\n    margin: 25px 30px;\n\n    \n    border-top: 2px solid grey;\n    border-right: 2px solid grey;\n    transform: rotate(45deg);\n    \n    cursor: pointer;\n    vertical-align: middle;\n    line-height: 65px;\n\n    &:hover {\n        border-top: 3px solid #F8CD07;\n        border-right: 3px solid #F8CD07;\n    }\n`;\n\n// border-top: 16px solid transparent;\n//     border-bottom: 16px solid transparent;\n//     borderright: 16px solid none;\n//     border-left: 24px solid seagreen;\n\nexport default Myweek;\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst NotFound = (props) => {\n\n    const history = useHistory();\n\n    return (\n        <div>\n            <h2>Sorry, the path is wrong.</h2>\n            <Goback onClick={() => { history.push(\"/\") }}>\n                go back\n            </Goback>\n        </div>\n\n    )\n};\n\nconst Goback = styled.button`\n    outline: 0;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    background-color: seagreen;\n    color: whitesmoke;\n\n    width: 120px;\n    height: 40px;\n    margin: 20px auto;\n\n    font-size: 14px;\n    cursor: pointer;\n`;\n\nexport default NotFound;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NotFound from './NotFound';\n\nconst Detail = (props) => {\n\n    const history = useHistory();\n    let parameter = props.match.params.day;\n    console.log(parameter);\n\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\n\n    const handleStarClick = (e, index) => {\n        e.preventDefault();\n        let clickStates = [...clicked];\n        for (let i = 0; i < 5; i++) {\n            if (i <= index) clickStates[i] = true;\n            else clickStates[i] = false;\n        }\n        setClicked(clickStates);\n    };\n\n\n    if (parameter) {\n        return (\n            <div>\n                <Title>How was your <Parameter>{parameter}</Parameter>?</Title>\n                <Circlewrap>\n                    <div onClick={(e) => handleStarClick(e, 0)} style={clicked[0] ? {borderColor: \"seagreen\"} : null}/>\n                    <div onClick={(e) => handleStarClick(e, 1)} style={clicked[1] ? {borderColor: \"seagreen\"} : null}/>\n                    <div onClick={(e) => handleStarClick(e, 2)} style={clicked[2] ? {borderColor: \"seagreen\"} : null}/>\n                    <div onClick={(e) => handleStarClick(e, 3)} style={clicked[3] ? {borderColor: \"seagreen\"} : null}/>\n                    <div onClick={(e) => handleStarClick(e, 4)} style={clicked[4] ? {borderColor: \"seagreen\"} : null}/>\n                </Circlewrap>\n                <Complete\n                    onClick={() => { history.push(\"/\") }}>\n                    Complete\n                </Complete>\n            </div >\n        )\n    } else {\n        return <NotFound />;\n    }\n}\nconst Title = styled.h2`\n    font-family: 'Pretendard-Bold';\n    font-size: 24px;\n    color: #464646;\n`;\n\nconst Parameter = styled.span`\n    background-image: linear-gradient(transparent 60%, #F8CD07 40%);\n`;\n\nconst Circlewrap = styled.div`\n    width: 400px;\n    display: flex;\n    justify-content: center;\n    align-items; center;\n\n    div {\n        display: flex;\n        width: 20px;\n        height: 20px;\n        margin: 28px 8px;\n        border: 5px solid lightgrey;\n        border-radius: 50%;\n        background-color: white;\n    }\n\n    div:hover {\n        border-color: seagreen;\n    }\n`;\n\nconst Complete = styled.button`\n    font-family: 'Pretendard-Regular';\n    outline: 0;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    background-color: seagreen;\n    color: whitesmoke;\n\n    width: 120px;\n    height: 40px;\n    margin: auto;\n\n    font-size: 14px;\n    cursor: pointer;\n`;\n\nexport default Detail;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Myweek from './Myweek';\nimport Detail from './Detail';\nimport Circle from './Circle';\nimport NotFound from './NotFound';\nimport styled from 'styled-components';\n\nfunction App() {\n\n    const [dayday, setDayday] = React.useState(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']);\n\n    return (\n        <div className=\"App\">\n            <Container>\n                <Wrap>\n                    <Switch>\n                        <Route exact path=\"/\" render={(props) => (<Myweek dayday={dayday} />)} />\n                        <Route path=\"/detail/:day\" component={Detail} render={(props) => (<Detail dayday={dayday} />)} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Wrap>\n            </Container>\n        </div>\n    );\n}\n\nconst Container = styled.div`\n    width: 400px;\n    height: 700px;\n    border: 1px solid transparent;\n    margin: auto;\n`;\n\nconst Wrap = styled.div`\n    width: 400px;\n    margin: 90.5px auto;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}